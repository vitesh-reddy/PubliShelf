<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PubliShelf - <%= user.firstname %>'s Profile</title>
    <style>
        :root {
            --primary-purple: #8a4af3;
            --dark-indigo: #6b48ff;
            --light-grey: #f5f5f5;
            --shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --gradient: linear-gradient(135deg, var(--primary-purple), var(--dark-indigo));
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background: #fafafa;
            color: #333;
            line-height: 1.6;
            overflow-x: hidden;
        }

        .container {
            max-width: 1400px;
            margin: 20px auto;
            padding: 0 20px;
            display: grid;
            grid-template-columns: 350px 1fr;
            gap: 25px;
        }

        .profile-card {
            background: #ffffff;
            border-radius: 16px;
            box-shadow: var(--shadow);
            padding: 30px;
            position: sticky;
            top: 20px;
            transform: translateY(0);
            transition: var(--transition);
            border: 1px solid rgba(138, 74, 243, 0.1);
        }

        .profile-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
        }

        .profile-header {
            text-align: center;
            padding-bottom: 20px;
            position: relative;
        }

        .profile-pic {
            width: 140px;
            height: 140px;
            background: var(--gradient);
            border-radius: 50%;
            margin: 0 auto 15px;
            position: relative;
            overflow: hidden;
            border: 4px solid #fff;
            box-shadow: var(--shadow);
        }

        .profile-pic::after {
            content: '<%= user.firstName ? user.firstName[0].toUpperCase() : "U" %>';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 60px;
            font-weight: 700;
        }

        .profile-header h2 {
            color: var(--dark-indigo);
            margin-bottom: 10px;
        }

        .profile-stats {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            margin: 20px 0;
            padding: 15px;
            background: var(--light-grey);
            border-radius: 10px;
        }

        .stat-item {
            text-align: center;
            padding: 10px;
            background: #fff;
            border-radius: 8px;
            transition: var(--transition);
        }

        .stat-item:hover {
            transform: scale(1.05);
        }

        .stat-item span {
            display: block;
            color: var(--primary-purple);
            font-weight: 600;
            font-size: 18px;
        }

        .detail-row {
            display: grid;
            grid-template-columns: 130px 1fr;
            padding: 15px;
            border-bottom: 1px solid var(--light-grey);
            transition: var(--transition);
            background: #fff;
            margin: 5px 0;
            border-radius: 8px;
        }

        .detail-row:hover {
            background: rgba(138, 74, 243, 0.05);
        }

        .attribute {
            color: var(--dark-indigo);
            font-weight: 600;
            font-size: 14px;
        }

        .value {
            color: #444;
            font-size: 14px;
        }

        .action-buttons {
            margin-top: 25px;
            display: flex;
            gap: 15px;
        }

        .btn {
            flex: 1;
            padding: 14px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: var(--transition);
            font-weight: 600;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .edit-btn {
            background: var(--gradient);
            color: white;
        }

        .edit-btn:hover {
            filter: brightness(1.1);
            transform: translateY(-2px);
        }

        .logout-btn {
            background: #eee;
            color: #666;
        }

        .logout-btn:hover {
            background: #ddd;
            transform: translateY(-2px);
        }

        .orders-section {
            padding: 20px;
            background: #ffffff;
            border-radius: 16px;
            box-shadow: var(--shadow);
        }

        .section-title {
            color: var(--dark-indigo);
            margin-bottom: 25px;
            position: relative;
            padding-bottom: 10px;
            font-size: 24px;
            font-weight: 600;
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 60px;
            height: 4px;
            background: var(--gradient);
            border-radius: 2px;
        }

        .order-card {
            display: flex;
            background: #fff;
            border-radius: 12px;
            box-shadow: var(--shadow);
            padding: 20px;
            margin-bottom: 20px;
            gap: 25px;
            transition: var(--transition);
            animation: slideIn 0.5s ease-out;
            border: 1px solid rgba(138, 74, 243, 0.1);
        }

        .order-card:hover {
            transform: translateX(8px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
        }

        .book-image {
            width: 175px;
            height: 250px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            transition: var(--transition);
        }

        .book-image:hover {
            transform: scale(1.05);
        }

        .order-details {
            padding: 10px 0;
        }

        .order-details h4 {
            color: var(--primary-purple);
            margin-bottom: 12px;
            font-size: 18px;
        }

        .order-details p {
            margin: 8px 0;
            font-size: 14px;
        }

        .order-details p strong {
            color: var(--dark-indigo);
        }

        .order-actions {
            display: flex;
            flex-direction: column;
            gap: 10px;
            justify-content: center;
            align-items: stretch;
        }

        .order-actions .btn,
        .order-actions .status {
            width: 100%;
            text-align: center;
            padding: 12px;
            border-radius: 6px;
            font-size: 14px;
        }

        .status {
            background: var(--light-grey);
            color: var(--dark-indigo);
            font-weight: 600;
        }

        .wishlist-section {
            background: #ffffff;
            border-radius: 16px;
            box-shadow: var(--shadow);
            padding: 20px;
            margin-top: 25px;
        }

        .wishlist-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .wishlist-item {
            text-align: center;
            padding: 15px;
            background: #fff;
            border-radius: 10px;
            transition: var(--transition);
        }

        .wishlist-item:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow);
        }

        .wishlist-item img {
            width: 100px;
            height: 130px;
            object-fit: cover;
            margin-bottom: 10px;
            border-radius: 6px;
        }

        /* Dialog Styling */
        .dialog-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 100;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition);
        }

        .dialog-overlay.open {
            opacity: 1;
            visibility: visible;
        }

        .dialog {
            background: #fff;
            border-radius: 12px;
            padding: 30px;
            width: 100%;
            max-width: 500px;
            box-shadow: var(--shadow);
            transform: scale(0.9);
            transition: var(--transition);
        }

        .dialog-overlay.open .dialog {
            transform: scale(1);
        }

        .dialog h3 {
            color: black;
            margin-bottom: 20px;
            font-size: 20px;
            font-weight: 600;
        }

        .dialog form {
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            gap: 5px;
        }

        .dialog input {
            width: 440px;
            padding: 12px;
            border: 1px solid var(--light-grey);
            border-radius: 6px;
            font-size: 14px;
            transition: var(--transition);
        }

        .dialog input:focus {
            outline: none;
            border-color: var(--primary-purple);
            box-shadow: 0 0 0 3px rgba(138, 74, 243, 0.1);
        }

        .dialog .form-section {
            width: 100%;
            padding-top: 10px;
            border-top: 1px solid var(--light-grey);
            margin-top: 15px;
        }

        .dialog .form-section h4 {
            color: var(--dark-indigo);
            margin-bottom: 15px;
            font-size: 16px;
        }

        .dialog .buttons {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }

        .dialog .btn {
            padding: 12px;
            font-size: 14px;
        }

        .dialog .save-btn {
            background: var(--gradient);
            color: white;
        }

        .dialog .cancel-btn {
            background: #eee;
            color: #666;
        }

        .error-message {
            color: #e63946;
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(-30px);
            }

            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @media (max-width: 1024px) {
            .container {
                grid-template-columns: 300px 1fr;
            }
        }

        @media (max-width: 768px) {
            .container {
                grid-template-columns: 1fr;
            }

            .profile-card {
                position: static;
            }
            .order-actions {
                flex-direction: row;
                flex-wrap: wrap;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <!-- Profile Card -->
        <div class="profile-card">
            <div class="profile-header">
                <div class="profile-pic"></div>
                <h2>
                    <%= user.firstname %>
                        <%= user.lastname %>
                </h2>
                <p style="color: #666; font-size: 14px;">
                    Member since <%= user.createdAt ? new Date(user.createdAt).toLocaleString('en-US', { month: 'long' ,
                        year: 'numeric' }) : 'Unknown' %>
                </p>
            </div>

            <div class="profile-stats">
                <div class="stat-item">
                    <span>
                        <%= user.orders.length %>
                    </span>
                    Orders
                </div>
                <div class="stat-item">
                    <span>
                        <%= user.wishlist.length %>
                    </span>
                    Wishlist
                </div>
            </div>

            <div class="profile-details">
                <div class="detail-row">
                    <span class="attribute">First Name:</span>
                    <span class="value">
                        <%= user.firstname %>
                    </span>
                </div>
                <div class="detail-row">
                    <span class="attribute">Last Name:</span>
                    <span class="value">
                        <%= user.lastname %>
                    </span>
                </div>
                <div class="detail-row">
                    <span class="attribute">Email:</span>
                    <span class="value">
                        <%= user.email %>
                    </span>
                </div>
            </div>

            <div class="action-buttons">
                <button class="btn edit-btn" onclick="openEditDialog()">Edit Profile</button>
                <button class="btn logout-btn" onclick="window.location.href='/logout'">Logout</button>
            </div>
        </div>

        <!-- Orders and Wishlist Sections -->
        <div>
            <!-- Orders Section -->
            <div class="orders-section">
                <h3 class="section-title">Your Orders</h3>
                <% if (user.orders && user.orders.length> 0) { %>
                    <% user.orders.forEach(order=> { %>
                        <% if (!order.book) return; %>
                            <div class="order-card">
                                <div class="order-details">
                                    <h4>
                                        <%= order.book.title %>
                                    </h4>
                                    <p><strong>Author:</strong>
                                        <%= order.book.author %>
                                    </p>
                                    <p><strong>Genre:</strong>
                                        <%= order.book.genre %>
                                    </p>
                                    <p><strong>Price:</strong> ₹<%= order.book.price || 0 %>
                                    </p>
                                    <p><strong>Quantity:</strong>
                                        <%= order.quantity %>
                                    </p>
                                    <p><strong>Order Date:</strong>
                                        <%= new Date(order.orderDate).toLocaleString('en-US', { month: 'short' ,
                                            day: '2-digit' , year: 'numeric' }) %>
                                    </p>
                                    <p><strong>Description:</strong>
                                        <%= order.book.description || 'No description available' %>
                                    </p>
                                </div>
                                <div>
                                    <img src="<%= order.book.image || 'https://m.media-amazon.com/images/I/61R+Cpm+HxL._SL1000_.jpg' %>"
                                        alt="<%= order.book.title %>" class="book-image">
                                    <div class="order-actions">
                                        <span class="status">
                                            <%= order.delivered ? 'Delivered' : 'Pending' %>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <% }); %>
                                <% } else { %>
                                    <p style="text-align: center; color: #666;">No orders yet.</p>
                                    <% } %>
            </div>

            <!-- Wishlist Section -->
            <div class="wishlist-section">
                <h3 class="section-title">Your Wishlist</h3>
                <% if (user.wishlist && user.wishlist.length> 0) { %>
                    <div class="wishlist-grid">
                        <% user.wishlist.forEach(book=> { %>
                            <div class="wishlist-item">
                                <img src="<%= book.image || 'https://m.media-amazon.com/images/I/61R+Cpm+HxL._SL1000_.jpg' %>"
                                    alt="<%= book.title %>">
                                <h4 style="color: var(--primary-purple); font-size: 14px; margin-bottom: 5px;">
                                    <%= book.title %>
                                </h4>
                                <p style="font-size: 12px; color: #666;">
                                    <%= book.author %>
                                </p>
                                <p style="font-size: 12px; color: var(--dark-indigo); font-weight: 600;">₹<%= book.price
                                        || 0 %>
                                </p>
                            </div>
                            <% }); %>
                    </div>
                    <% } else { %>
                        <p style="text-align: center; color: #666;">Your wishlist is empty.</p>
                        <% } %>
            </div>
        </div>
    </div>

    <!-- Edit Profile Dialog -->
    <div class="dialog-overlay" id="editDialog">
        <div class="dialog">
            <h3>Edit Profile</h3>
            <form id="updateProfileForm">
                <div>
                    <label for="firstname" style="display: block; margin-bottom: 5px; color: rgb(55, 65, 81);">First
                        Name</label>
                    <input type="text" id="firstname" name="firstname" value="<%= user.firstName %>" required>
                </div>
                <div>
                    <label for="lastname" style="display: block; margin-bottom: 5px; color: rgb(55, 65, 81);">Last
                        Name</label>
                    <input type="text" id="lastname" name="lastname" value="<%= user.lastName %>" required>
                </div>
                <div>
                    <label for="email" style="display: block; margin-bottom: 5px; color: rgb(55, 65, 81);">Email</label>
                    <input type="text" id="email" name="email" value="<%= user.email %>" required>
                    <p class="error-message" id="emailError"></p>
                </div>

                <!-- Change Password Section -->
                <div class="form-section">
                    <h4 style="color: rgb(55, 65, 81);">Change Password</h4>
                    <div>
                        <label for="currentPassword"
                            style="display: block; margin-bottom: 5px; color: rgb(55, 65, 81);">Current Password</label>
                        <input type="password" id="currentPassword" name="currentPassword">
                    </div>
                    <div>
                        <label for="newPassword" style="display: block; margin-bottom: 5px; color: rgb(55, 65, 81);">New
                            Password</label>
                        <input type="password" id="newPassword" name="newPassword">
                    </div>
                    <div>
                        <label for="confirmPassword"
                            style="display: block; margin-bottom: 5px; color: rgb(55, 65, 81);">Confirm New
                            Password</label>
                        <input type="password" id="confirmPassword" name="confirmPassword">
                        <p class="error-message" id="passwordError"></p>
                    </div>
                </div>
                <p id="errorMessage" style="color: red;"></p>
                <div class="buttons">
                    <button type="button" class="btn cancel-btn" onclick="closeEditDialog()">Cancel</button>
                    <button type="submit" class="btn save-btn">Save Changes</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Dialog control functions
        function openEditDialog() {
            const dialog = document.getElementById('editDialog');
            dialog.classList.add('open');
        }

        function closeEditDialog() {
            const dialog = document.getElementById('editDialog');
            dialog.classList.remove('open');
            // Reset error messages
            document.getElementById('emailError').style.display = 'none';
            document.getElementById('passwordError').style.display = 'none';
        }

        // Close dialog when clicking outside
        document.getElementById('editDialog').addEventListener('click', (e) => {
            if (e.target === e.currentTarget) {
                closeEditDialog();
            }
        });

        // Form submission handling
        // document.getElementById('editProfileForm').addEventListener('submit', async (e) => {
        //     e.preventDefault();

        //     const firstName = document.getElementById('firstName').value.trim();
        //     const lastName = document.getElementById('lastName').value.trim();
        //     const email = document.getElementById('email').value.trim();
        //     const currentPassword = document.getElementById('currentPassword').value;
        //     const newPassword = document.getElementById('newPassword').value;
        //     const confirmPassword = document.getElementById('confirmPassword').value;

        //     // Reset error messages
        //     const emailError = document.getElementById('emailError');
        //     const passwordError = document.getElementById('passwordError');
        //     emailError.style.display = 'none';
        //     passwordError.style.display = 'none';

        //     // Basic validation
        //     const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        //     if (!emailRegex.test(email)) {
        //         emailError.textContent = 'Please enter a valid email address.';
        //         emailError.style.display = 'block';
        //         return;
        //     }

        //     if (newPassword || confirmPassword || currentPassword) {
        //         if (!currentPassword) {
        //             passwordError.textContent = 'Current password is required to change password.';
        //             passwordError.style.display = 'block';
        //             return;
        //         }
        //         if (newPassword !== confirmPassword) {
        //             passwordError.textContent = 'New passwords do not match.';
        //             passwordError.style.display = 'block';
        //             return;
        //         }
        //     }

        //     // Prepare data to send
        //     const data = { firstName, lastName, email };
        //     if (currentPassword && newPassword) {
        //         data.currentPassword = currentPassword;
        //         data.newPassword = newPassword;
        //     }

        //     try {
        //         const response = await fetch('/api/buyer/profile', {
        //             method: 'PUT',
        //             headers: { 'Content-Type': 'application/json' },
        //             body: JSON.stringify(data)
        //         });

        //         if (!response.ok) {
        //             const errorData = await response.json();
        //             throw new Error(errorData.message || 'Failed to update profile');
        //         }

        //         // Update the UI with new values
        //         document.querySelector('.profile-header h2').textContent = `${firstName} ${lastName}`;
        //         document.querySelectorAll('.value')[0].textContent = firstName;
        //         document.querySelectorAll('.value')[1].textContent = lastName;
        //         document.querySelectorAll('.value')[2].textContent = email;
        //         document.querySelector('.profile-pic').setAttribute('data-initial', firstName[0].toUpperCase());

        //         closeEditDialog();
        //         alert('Profile updated successfully!');
        //     } catch (error) {
        //         console.error('Error updating profile:', error);
        //         alert('Failed to update profile: ' + error.message);
        //     }
        // });


        document.getElementById("updateProfileForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const form = e.target;
            const buyerId = "<%= user._id %>";
            const email = form.email.value.trim();
            const currentPassword = form.currentPassword.value.trim();
            const newPassword = form.newPassword.value.trim();
            const confirmPassword = form.confirmPassword.value.trim();

            const errorMessage = document.getElementById("errorMessage");
            errorMessage.innerText = ""; // Clear previous error

            // Email validation
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                errorMessage.innerText = "Please enter a valid email address.";
                return;
            }

            // Password match validation
            console.log(newPassword !== confirmPassword);
            if (newPassword !== confirmPassword) {
                console.log("Passwords do not match.");
                errorMessage.innerText = "Passwords do not match.";
                return;
            }


            const data = {
                firstname: form.firstname.value.trim(),
                lastname: form.lastname.value.trim(),
                email: email,
                currentPassword: currentPassword,
                confirmPassword: confirmPassword || currentPassword,
            };

            try {
                const res = await fetch(`/buyer/update-profile/${buyerId}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data),
                });

                const result = await res.json();
                console.log("results ", result);

                if (!result.success) {
                    errorMessage.innerText = result.message;
                } else {
                    alert("Profile updated successfully.");
                    window.location.reload();
                }
            } catch (err) {
                errorMessage.innerText = "Something went wrong. Please try again.";
            }
        });

    </script>
</body>

</html>